# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

token_equal_pos = equation.find("=")
token_x_pos = equation.find("x")
token_plus_pos = equation.find("+")
k = float(equation[token_equal_pos+1:token_x_pos])
b = float(equation[token_plus_pos+1:])

print("y = {}".format(k*x +b))

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
##date = '01.11.1985'

# Примеры некорректных дат
##date = '01.22.1001'
##date = '1.12.1001'
##date = '-2.10.3001'

date = str(input("Введите дату в формате dd.mm.yyyy: "))
digits = "0123456789"

# проверяем позиции в строке
is_correct = (date[2] == ".") and (date[5] == ".") and (len(date) == 10)

# убеждаемся что введены только циферки
for char in date[0:2]+date[3:5]+date[6:]:
    if char not in digits:
        is_correct = False

# преобразуем в числа если все правильно, иначе заполняем нулями чтобы не было ошибок
if is_correct:
    d = int(date[0:2])
    m = int(date[3:5])
    y = int(date[6:])
else:
    d = m = y =0

# проверяем год на високосность
bis_sextus = ((y%4 == 0) and (y%100 != 0)) or (y%400 == 0)

# количество дней от 1 до 31, номер месяца от 1 до 12, номер года от 1 до 9999
is_correct = is_correct and (d >= 1) and (d <= 31) and (m >= 1) and (m <= 12) and (y >= 1) and (y <= 9999)
# для указанных месяцев количество дней меньше 31
is_correct = is_correct and not ((d > 30) and (m in [2,4,6,9,11]))
# для февраля дней и вовсе меньше 30
is_correct = is_correct and not ((d > 29) and (m == 2))
# для високосного года может быть 29
is_correct = is_correct and not ((m == 2) and (d > 28) and not bis_sextus)

if is_correct:
    print("Дата введена корректно")
else:
    print("Ошибка при вводе даты")

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

n = int(input("Введите номер комнаты: "))

# определяем номер "квадрата" в который входит комната
sq_num = 0
sq_max = 0
while n > sq_max:
   sq_max += sq_num*sq_num
   sq_num += 1
sq_num -= 1

# вычисляем первый номер в "квадрате"
sq_start = sq_max+1-sq_num*sq_num

# определяем этаж с которого начинается "квадрат"
# сумма арифметической прогрессии.
# целочисленное деление т.к. числитель всегда четный
sq_start_floor = (sq_num-1)*(sq_num)//2 + 1

# вычисляем этаж и номер комнаты на этаже
floor = sq_start_floor + (n - sq_start)//sq_num
left = (n - sq_start)%sq_num + 1

print(f"Комната находится на {floor} этаже. {left} слева")
